type AutoScalingCanisterSharedFunctionHook = func (text) -> (text);
type Login = service {
  addprojectId : (text, text) -> ();
  getPK : () -> (text) query;
  getuserdetail : (text) -> (opt userdetails);
  login : (userlogin) -> (text);
  signUp : (UserInfo) -> (text);
  skExists : (text) -> (bool) query;
  transferCycles : () -> ();
  userdetail : (text, userdetails) -> (text);
};
type ScalingLimitType = variant { heapSize : nat; count : nat };
type ScalingOptions = record {
  autoScalingHook : AutoScalingCanisterSharedFunctionHook;
  sizeLimit : ScalingLimitType;
};
type UserInfo = record {
  userName : text;
  userEmail : text;
  userPassword : text;
  userConfirmPassword : text;
};
type userdetails = record {
  firstname : text;
  userEmail : text;
  username : text;
  userId : text;
  investedId : vec text;
  description : text;
  userImage : text;
  nationality : text;
  phonenumber : text;
  linkedInid : text;
  projectsId : vec text;
  qualification : text;
  lastname : text;
};
type userlogin = record { userEmail : text; userPassword : text };
service : Login